{% extends "base.html.twig" %}
{% block body %}
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h3 class="text-center">Ajout d'un accrochage </h3>
                <h4 class="text-center">autocar : <em style="color: #00e765">{{ car.marque }}, {{ car.immat }}</em></h4>
            </div>
        </div>
        <div class="row">
            <p>Les problèmes antérieurs !!!!!!</p>
        </div>
        {{form_start(form, {'attr': {'class': 'dropzone', 'id':'my-awesome-dropzone', 'action': path('carrosserie_car', {'id': car.id })}})}}
            <div class="form-row">
                <div class="form-group col-md-3">
                    {{ form_label(form.auteur, "Déclarant : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.auteur, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.auteur, { 'attr': {'class': 'red' }}) }}
                </div>
                <div class="form-group col-md-3">
                    {{ form_label(form.date_signalement, "Date signalement : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.date_signalement, {'attr': {'class': 'js-datepicker form-control', 'autocomplete':'off'}}) }}
                    {{ form_errors(form.date_signalement, { 'attr': {'class': 'red' }}) }}
                </div>
                <div class="form-group col-md-3">
                    {{ form_label(form.date_remise_etat, "Date remise en état : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.date_remise_etat, {'attr': {'class': 'js-datepicker form-control', 'autocomplete': 'off'}}) }}
                    {{ form_errors(form.date_remise_etat, { 'attr': {'class': 'red' }}) }}
                </div>
                <div class="form-group col-md-3">
                    {{ form_label(form.etat_car, "Etat : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.etat_car, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.etat_car, { 'attr': {'class': 'red' }}) }}
                </div>
            </div>
        <div class="form-row">
            <div class="form-group col-md-12">
                {{ form_label(form.nature_accro, "Nature accro.: ", {'label_attr': {'class': ' control-label'}}) }}
                {# Génération de l'input.#}

                {{ form_widget(form.nature_accro, {'attr': {'class': 'form-control'}}) }}
                {{ form_errors(form.nature_accro, { 'attr': {'class': 'red' }}) }}
            </div>
        </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    {{ form_label(form.desc_accro, "Desc. accro : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.desc_accro, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.desc_accro, { 'attr': {'class': 'red' }}) }}
                </div>

                <div class="form-group col-md-6">
                    {{ form_label(form.suite_donnee, "Suite(s) donnée(s) : ", {'label_attr': {'class': ' control-label'}}) }}
                    {# Génération de l'input.#}

                    {{ form_widget(form.suite_donnee, {'attr': {'class': 'form-control'}}) }}
                    {{ form_errors(form.suite_donnee, { 'attr': {'class': 'red' }}) }}
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-12">
                    <h5>Importez photos du car </h5>
                    <span style="color: #ff5500;">Attention, si une croix <b><em>ROUGE</em></b> apparait sur la photo, cela signifie que la photo ne sera pas enregistrée ! (Taille max : 2MB) </span>
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-12">
                    <div  id="form_snippet_image" action="{{  path('carrosserie_car', {'id' : car.id })}}">
                    </div>
                </div>
            </div>

            <div class="form-row">

                {{ form_widget(form.envoyer, {'attr': { 'class': 'btn btn-block btn-primary' }}) }}
            </div>
        {{ form_end(form) }}

    </div>


{% endblock %}

{% block javascripts %}
<script src="{{ asset('js/dropzone.min.js') }}"></script>
<script type="text/javascript">
    Dropzone.autoDiscover = false;
    $(document).ready(function () {
        var fff = $("#form_snippet_image");
        var _actionToDropZone = $("#form_snippet_image").attr('action');

        var myDropzone = new Dropzone("form", {

            autoProcessQueue: false,
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 4,
            clickable: "#form_snippet_image",


            init: function() {
                var myDropzone = this;

                // First change the button to actually tell Dropzone to process the queue.
                $("#carrosserie_envoyer").on("click", function(e) {

                    e.preventDefault();
                    e.stopPropagation();


                    var auteur = $("#carrosserie_auteur").val();
                    var dateSignalement = $("#carrosserie_date_signalement").val();
                    var dateRe = $("#carrosserie_date_remise_etat").val();
                    var carrosserie_etat_car = $("#carrosserie_etat_car").val();
                    var carroserie_desc_accro  = $("#carrosserie_desc_accro").val();
                    var carrosserie_suite_donnees = $("#carrosserie_suite_donnee").val();
                    var nature_accro = $("#carrosserie_nature_accro").val();


                    if(auteur === '')
                    {
                        alert("Erreur auteur");
                        return false;
                    }
                    else if(!/^[0-9]{1,2}\/+[0-9]{1,2}\/+[0-9]{1,2}/.test(dateSignalement))
                    {
                        alert("Erreur date signalement");
                        return false;
                    }
                    else if(nature_accro === '' || nature_accro.length < 4)
                    {
                        alert("Nature de l'accrochage incorrect");
                        return false;
                    }
                    else if(carroserie_desc_accro === '' || carroserie_desc_accro.length < 2)
                    {
                        alert('Erreur description accrochage ');
                        return false;
                    }
                    else
                    {
                        //var tes = $("form#my-awesome-dropzone").serialize();
                        myDropzone.processQueue();


                    }

                    /*else if(!/^[0-9]{1,2}\/+[0-9]{1,2}\/+[0-9]{1,2}/.test(dateRe))
                    {
                        alert("Erreur date remise en état");
                        return false;
                    }*/

                });

                myDropzone.on("addedfile", function(file) {
                    /* Maybe display some more file information on your page */
                });

                // Listen to the sendingmultiple event. In this case, it's the sendingmultiple event instead
                // of the sending event because uploadMultiple is set to true.
                this.on("sendingmultiple", function() {
                    // Gets triggered when the form is actually being sent.
                    // Hide the success button or the complete form.

                });
                this.on("successmultiple", function(files, response) {
                    // Gets triggered when the files have successfully been sent.
                    // Redirect user or notify of success.
                    window.location.href = "/admin/etatCarrosseries";
                });
                this.on("errormultiple", function(files, response) {
                    // Gets triggered when there was an error sending the files.
                    // Maybe show form again, and notify user of error
                });
            }


        });

    });

</script>
{% endblock %}